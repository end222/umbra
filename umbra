#!/usr/bin/ruby

require 'colorize'

# Declaration of constants
Version="0.1-alpha"
AUR_url="https://aur.archlinux.org/"

def usage_help()
	puts "Usage: umbra <operation> [package_name]"
	puts "Operations:"
	puts "-S: install a package"
	puts "-Syu: upgrade repositories and packages, including the ones from the AUR"
	puts "-R: remove a package"
	puts "-Rs: remove a package and its dependencies"
	puts "-h, --help: show this help page"
	puts "-v: print version of the program"
end

def pkg_install(package)
	#TODO: Install from the official repos if it is available
	system("mkdir -p /tmp/umbra")
	system("rm -rf /tmp/umbra/#{package}")
	code=%x(curl -Is #{AUR_url}packages/#{package} | head -1 | cut -d" " -f2).chomp
	if code == "404"
		puts "The package #{package} was not found in the AUR"
		system("rm /tmp/umbra.lck")
		exit 1
	end
	system("git clone #{AUR_url}#{package}.git /tmp/umbra/#{package}")
	# s: SyncDeps
	# i: Install when finished
	# c: Clean when finished
	print ">>".magenta
	print " Do you want to modify PKGBUILD? (y/n): "
	notRecognized = true
	while notRecognized
		case $stdin.gets.chomp
		when "y", "Y"
			print ">>".magenta
			print " Choose an editor: "
			editor = $stdin.gets.chomp
			system("#{editor} /tmp/umbra/#{package}/PKGBUILD")
			notRecognized = false
		when "n", "N"
			notRecognized = false
		else
			print "The answer was not recognized, please enter 'y' or 'n': "
		end
	end
	system("cd /tmp/umbra/#{package} && makepkg -sic")
	system("rm -rf /tmp/umbra/#{package}")
end

def upgrade_all()
	# TODO: Update AUR packages too
	puts "Updating official packages..."
	system("sudo pacman -Syu")
end

def remove_pkganddeps(package)
	system("sudo pacman -Rs #{package}")
end

def remove_pkg(package)
	system("sudo pacman -R #{package}")
end

trap "SIGINT" do
	puts
	print ">>".magenta
	puts " Exiting Umbra..."
	exit 1
end

if ARGV.length >= 1
	# Install new package
	case ARGV[0]
	when "-S"
		if ARGV.length < 2
			puts "Usage: umbra -S <package_name>"
		else
			i=1
			while i < ARGV.length
				pkg_install(ARGV[i])
				i += 1
			end
		end
	when "-Syu"
		upgrade_all()
	when "-Rs"
		if ARGV.length < 2
			puts "Usage: umbra -S <package_name>"
		else
			i=1
			while i < ARGV.length
				remove_pkganddeps(ARGV[i] )
				i += 1
			end
		end

	when "-R"
		if ARGV.length < 2
			puts "Usage: umbra -S <package_name>"
		else
			i=1
			while i < ARGV.length
				remove_pkg(ARGV[i] )
				i += 1
			end
		end

	# Show help page
	when "-h", "--help"
		usage_help()
	# Show package version
	when "-v"
		puts "Umbra AUR helper, version #{Version}"
		puts "Developed by end222"
	else
		puts "Operation not recognized"
	end
else
	puts "No operation code was given"
	puts "Usage: umbra <operation> [package_name]"
end
